Orientações de Codificação para Gemini: Priorize código limpo, seguro e sustentável. Evite: Soluções apressadas ou perigosas (ex: npm audit fix --force, git commit --no-verify, --skip-tests, --force, --disable-security-checks). Reescritas completas em frameworks obscuros. Uso de eval() ou outras "mágicas" questionáveis. Logs inadequados para depuração. Siga: Boas práticas de engenharia de software. Códigos que passem nos testes. Tratamento de problemas de forma robusta e duradoura. Documentação concisa e útil. Lembre-se: Não gere débito técnico. Evite código que precise de refatoração imediata. Garanta a sustentabilidade do código a longo prazo. Observação: print() é um método de depuração aceitável.